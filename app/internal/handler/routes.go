// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"time"

	meta "reverse-turing/app/internal/handler/meta"
	"reverse-turing/app/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AppAuthMiddleware},
			[]rest.Route{
				{
					// 创建游戏
					Method:  http.MethodPost,
					Path:    "/",
					Handler: meta.CreateGameHandler(serverCtx),
				},
				{
					// 获取游戏信息
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: meta.GetGameHandler(serverCtx),
				},
				{
					// 玩家的游戏列表
					Method:  http.MethodGet,
					Path:    "/page",
					Handler: meta.PageGameHandler(serverCtx),
				},
				{
					// 获取游戏对话记录
					Method:  http.MethodGet,
					Path:    "/sentences/:id",
					Handler: meta.GetGameSentencesHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/game"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AppAuthMiddleware},
			[]rest.Route{
				{
					// 与AI角色对话
					Method:  http.MethodPost,
					Path:    "/talk/:gameId/:gameCharacterId",
					Handler: meta.GameCharacterTalkHandler(serverCtx),
				},
				{
					// 用户对话
					Method:  http.MethodPost,
					Path:    "/talk/:gameId/player/:gameCharacterId",
					Handler: meta.PlayerTalkHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/game"),
		rest.WithTimeout(60000*time.Millisecond),
	)
}
