// Code generated by goctl. DO NOT EDIT.
package types

type Agent struct {
	Id           string            `json:"id"`
	ModelName    string            `json:"modelName"`
	PromptParams map[string]string `json:"promptParams"`
	Enable       bool              `json:"enable"`
}

type Character struct {
	Id          string `json:"id"`
	Name        string `json:"name"`
	Positioning string `json:"positioning"`
	Avatar      string `json:"avatar"`
	Portrait    string `json:"portrait"`
	Profile     string `json:"profile"`
	Enable      bool   `json:"enable"`
}

type EmptyReq struct {
}

type EmptyResp struct {
}

type GameAllResp struct {
	Records []GameResp `json:"records"`
}

type GameCharacter struct {
	Id         string     `json:"id"`
	IsAi       bool       `json:"isAi"`
	Character  *Character `json:"character"`
	Agent      *Agent     `json:"agent,omitempty"`
	VoteTo     string     `json:"voteTo,omitempty"`
	FinalVotes int        `json:"finalVotes,omitempty"`
	CreatedAt  string     `json:"createdAt"`
	UpdatedAt  string     `json:"updatedAt"`
}

type GameCharacterTalkReq struct {
	GameId          string   `path:"gameId"`
	GameCharacterId string   `path:"gameCharacterId"`
	TalkType        string   `json:"talkType"`
	Params          []string `json:"params"`
}

type GameCreateReq struct {
	AiNum int `json:"aiNum"`
}

type GameDevicePathReq struct {
	DeviceId string `path:"deviceId"`
}

type GameJudgeResp struct {
	JudgeType  string `json:"judgeType"`
	Asker      string `json:"asker,omitempty"`
	Question   string `json:"question,omitempty"`
	Asked      string `json:"asked,omitempty"`
	VoteTo     string `json:"voteTo,omitempty"`
	VoteReason string `json:"voteReason,omitempty"`
}

type GamePathReq struct {
	Id string `path:"id"`
}

type GameResp struct {
	Id             string          `json:"id"`
	Code           string          `json:"code"`
	DeviceId       string          `json:"deviceId"`
	AiPlayers      []GameCharacter `json:"aiPlayers"`
	Player         GameCharacter   `json:"player"`
	Status         string          `json:"status"`
	Progress       string          `json:"progress"`
	AiNum          int             `json:"aiNum"`
	CharacterNames []string        `json:"characterNames"`
	WhoIsHuman     string          `json:"whoIsHuman"`
	CreatedAt      string          `json:"createdAt"`
	UpdatedAt      string          `json:"updatedAt"`
	GameStartTime  string          `json:"gameStartTime"`
	GameEndTime    string          `json:"gameEndTime"`
}

type GameSentenceJudgeReq struct {
}
